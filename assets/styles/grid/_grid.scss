/*----------------------------------*\
    Grid
\*----------------------------------*/
/*
	Container and row
*/
/* Container main css and it's width */
.container {
	margin-right: auto;
	margin-left: auto;
	padding-right: 12px;
	padding-left: 12px;

	/*
		Responsive media query
		On Extra-Small screens and down, container is full width
	*/
	/* Width 768px on small devices (768px and more) */
	@media #{$small-and-up} {
		width: 768px;
	}

	/* Width 936px on medium devices (960px and more) */
	@media #{$medium-and-up} {
		width: 960px;
	}

	/* Width 1140px on large devices (1160px and more) */
	@media #{$large-and-up} {
		width: 1140px;
	}

	/* Width 1440px on large devices (1440px and more) */
	@media #{$extra-large-and-up} {
		width: 1440px;
	}

	/* Different gutter for small screens */
	@media #{$extra-small-and-down} {
		padding-right: 8px;
		padding-left: 8px;
	}
}

/* Fluid container aka full width */
.container-fluid {
	margin-right: auto;
	margin-left: auto;
	padding-right: 12px;
	padding-left: 12px;

	/* Different gutter for small screens */
	@media #{$small-and-down} {
		padding-right: 8px;
		padding-left: 8px;
	}
}

/* Row is wraper of columns, it removes extra padding of columns left and right to fit container width */
.row {
	margin-right: -12px;
	margin-left: -12px;
	@media #{$small-and-down} {
		margin-right: -8px;
		margin-left: -8px;
	}
}

/* Main flex class, without this, flex positioning is not working. Use "row" when using columns, if not, use "flex" */
.flex,
.row {
	display: flex;
	flex-wrap: wrap;
}

/*
	Flex alignment
*/
.flex {
	/*
	  Properties for parents - containers
		Direction of displayed flex items
	*/
	/* Direction of items left to right */
	&--row {
		flex-direction: row;
	}

	/* Direction of items right to left */
	&--row-reverse {
		flex-direction: row-reverse;
	}

	/* Direction of items top to bottom */
	&--column {
		flex-direction: column;
	}

	/* Direction of items bottom to top */
	&--column-reverse {
		flex-direction: column-reverse;
	}

	/*
	  Content alignment on main axis - X axis
	*/
	/* Justify content left */
	&--justify-left {
		justify-content: flex-start;
	}

	/* Justify content right */
	&--justify-right {
		justify-content: flex-end;
	}

	/* Justify content in center */
	&--justify-center {
		justify-content: center;
	}

	/* Justify content with space between it */
	&--justify-space-between {
		justify-content: space-between;
	}

	/* Justify content with space around it */
	&--justify-space-around {
		justify-content: space-around;
	}

	/*
	  Content alignment on cross axis - Y axis
	*/
	/* Align items on top */
	&--align-top {
		align-items: flex-start;
	}

	/* Align items on bottom */
	&--align-bottom {
		align-items: flex-end;
	}

	/* Align items vertically in center */
	&--align-vertical {
		align-items: center;
	}

	/* Stretch items to fill container */
	&--align-stretch {
		align-items: stretch;
	}

	/* Align items such as their baselines align */
	&--align-baseline {
		align-items: baseline;
	}

	/*
	  Content alignment on cross axis - Y axis, but only when there are multiple lines and extra space in container - Y axis
	*/
	/* Align content left */
	&--left {
		align-content: flex-start;
	}

	/* Align content right */
	&--right {
		align-content: flex-end;
	}

	/* Align content in center */
	&--center {
		align-content: center;
	}

	/* Stretch content to fill container */
	&--stretch {
		align-content: stretch;
	}

	/* Align content with space between */
	&--space-between {
		align-content: space-between;
	}

	/* Align content with space around */
	&--space-around {
		align-content: space-around;
	}

	/*
	  Properties for children - flex items
	*/
	/* Align flex item on top */
	&__item-top {
		align-self: flex-start;
	}

	/* Align flex item on bottom */
	&__item-bottom {
		align-self: flex-end;
	}

	/* Align flex item in center */
	&__item-center {
		align-self: center;
	}

	/* Align flex item on baseline */
	&__item-baseline {
		align-self: baseline;
	}

	/* Stretch flex item to fill container */
	&__item-stretch {
		align-self: stretch;
	}
}

/*
	Columns
*/
/* Add padding left and right to all columns. Width: 100% added to fill the container if any column size is not defined */
[class*=" col-"],
[class^="col-"] {
	padding-right: 15px;
	padding-left: 15px;
	width: 100%;
}

/* Set column width */
@mixin col-width($width) {
	max-width: $width;
	flex-basis: $width;
}

/* Create columns from sizes 1-12 */
@each $class, $point in $breakpoints {
	@media #{$point}{
		@for $i from 1 through $grid {
			.col-#{$class}-#{$i} {
				@include col-width(100% / $grid * $i);
			}
		}
	}
}

/*
	Basic Grid Stuff
*/
/* Elements have padding and border included in the element's total width and height */
*,
*:after,
*:before {
	box-sizing: border-box;
}
